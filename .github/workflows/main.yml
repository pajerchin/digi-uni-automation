# This is a basic workflow to help you get started with Actions

name: Automated digital marketing

# Controls when the workflow will run
on:
  workflow_dispatch:
  #repository_dispatch:
   # types: [wordpress]

jobs:
  cypress:
    runs-on: ubuntu-latest
    # let's make sure our tests pass on Chrome browser
    name: GA4 order test
    steps:
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v4
        with:
          browser: chrome
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: digitalna-univerzita
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/pajerchin/digi-uni-automation/blob/main/digi.png
          SLACK_MESSAGE: "Tests for GA4 order floe :rocket:"
          SLACK_TITLE: GA4 tests
          SLACK_USERNAME: digitalna-univerzita
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  lighthouse:
    runs-on: ubuntu-latest
    name: Performance test
    steps:
      - uses: actions/checkout@v2
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v8
        with:
          urls: https://www.florkashop.sk/
          budgetPath: "./budget.json"
          configPath: "./config.json"
          uploadArtifacts: true

      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: digitalna-univerzita
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/pajerchin/digi-uni-automation/blob/main/digi.png
          SLACK_MESSAGE: "Performance tests :rocket:"
          SLACK_TITLE: Performance test
          SLACK_USERNAME: digitalna-univerzita
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  newman:
    runs-on: ubuntu-latest
    name: Technical SEO tests
    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v3.3.0
        with:
          node-version: 16

      - name: Install newman and htmlextra repoter
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Make Directory for test results
        run: mkdir -p reports

      - name: Run postman collection
        if: always()
        run: |
          newman run ./api/florkashop-marketing.json -e ./api/prod-env.json -r htmlextra,cli,junit --reporter-htmlextra-export reports/htmlreport.html --reporter-junit-export reports/junit.xml --delay-request 500 --timeout-request 8000

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "reports/junit.xml"

      - name: Output the run Details
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: newman
          path: reports

      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: digitalna-univerzita
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/pajerchin/digi-uni-automation/blob/main/digi.png
          SLACK_MESSAGE: "Technical SEO tests :rocket:"
          SLACK_TITLE: SEO tests
          SLACK_USERNAME: digitalna-univerzita
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

